version: '3.8'

services:
  # Agent nodes - these will run in containers
  agent-1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: distributed-llm-agent-1
    hostname: agent-1
    ports:
      - "8080:8080"
      - "7946:7946"
      - "9090:9090"
    command: [
      "/bin/agent",
      "--node-id=agent-1",
      "--bind-port=8080",
      "--gossip-port=7946",
      "--metrics-port=9090"
    ]
    networks:
      - llm-network
    environment:
      - LOG_LEVEL=info
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  agent-2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: distributed-llm-agent-2
    hostname: agent-2
    ports:
      - "8081:8080"
      - "7947:7946"
      - "9091:9090"
    command: [
      "/bin/agent",
      "--node-id=agent-2",
      "--bind-port=8080",
      "--gossip-port=7946",
      "--metrics-port=9090",
      "--seed-nodes=agent-1:7946"
    ]
    networks:
      - llm-network
    environment:
      - LOG_LEVEL=info
    depends_on:
      agent-1:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  agent-3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: distributed-llm-agent-3
    hostname: agent-3
    ports:
      - "8082:8080"
      - "7948:7946"
      - "9092:9090"
    command: [
      "/bin/agent",
      "--node-id=agent-3",
      "--bind-port=8080",
      "--gossip-port=7946",
      "--metrics-port=9090",
      "--seed-nodes=agent-1:7946,agent-2:7946"
    ]
    networks:
      - llm-network
    environment:
      - LOG_LEVEL=info
    depends_on:
      agent-1:
        condition: service_healthy
      agent-2:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: distributed-llm-prometheus
    ports:
      - "9093:9090"
    volumes:
      - ./deployments/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - llm-network
    depends_on:
      - agent-1
      - agent-2
      - agent-3

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: distributed-llm-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./deployments/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - llm-network
    depends_on:
      - prometheus

  # Optional: GPU-enabled agent for testing
  agent-gpu:
    build:
      context: .
      dockerfile: Dockerfile.gpu
    container_name: distributed-llm-agent-gpu
    hostname: agent-gpu
    ports:
      - "8083:8080"
      - "7949:7946"
      - "9094:9090"
    command: [
      "/bin/agent",
      "--node-id=agent-gpu",
      "--bind-port=8080",
      "--gossip-port=7946",
      "--metrics-port=9090",
      "--seed-nodes=agent-1:7946"
    ]
    networks:
      - llm-network
    environment:
      - LOG_LEVEL=info
      - NVIDIA_VISIBLE_DEVICES=all
    depends_on:
      agent-1:
        condition: service_healthy
    profiles:
      - gpu
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

networks:
  llm-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus-data:
  grafana-data:
